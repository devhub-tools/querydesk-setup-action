name: Setup QueryDesk Database
description: Automate setting up a database client using devhub.tools so your team has instant access for debugging and testing.

branding:
  icon: database
  color: blue

inputs:
  api-key:
    description: API key from settings in your installation.
    required: true
  id:
    description: The id to assign to this database connection. The same id must be passed in subsequent requests to update/delete this connection.
    required: true
  name:
    description: The name for users to use to identity the database.
    required: true
  hostname:
    description: The hostname for connecting to the database, either an ip or url.
    required: true
  database:
    description: The name of the database to connect on.
    required: true
  adapter:
    description: The adapter to use to establish the connection. Currently only `postgres`, `mysql`, and `clickhouse` are supported.
    required: true
  username:
    description: The username to authenticate with.
    required: true
  password:
    description: The password to authenticate with.
    required: true
  group:
    description: The group this database belongs to, used for UI grouping.
  agent-id:
    description: The id of the agent this database should use to connect
  ssl:
    description: Set to `enabled` to turn on ssl connections for this database.
  ssl_ca_cert:
    description: The server ca cert to use with ssl connections, `ssl` must be set to `enabled`.
  ssl_key:
    description: The client key to use with ssl connections, `ssl` must be set to `enabled`.
  ssl_cert:
    description: The client cert to use with ssl connections, `ssl` must be set to `enabled`.
  host:
    description: The host to make the api call to.
    default: api.devhub.tools

runs:
  using: composite
  steps:
    - name: Setup Database Client
      shell: bash
      run: |
        curl -X PUT https://${{ inputs.host }}/api/v1/querydesk/databases/setup \
          -H "content-type: application/json" \
          -H "x-api-key: ${{ inputs.api-key }}" \
          --fail \
          -d '{
              "id": "${{ inputs.id }}",
              "name": "${{ inputs.name }}",
              "hostname": "${{ inputs.hostname }}",
              "database": "${{ inputs.database }}",
              "adapter": "${{ inputs.adapter }}",
              "username": "${{ inputs.username }}",
              "password": "${{ inputs.password }}",
              "group": "${{ inputs.group }}",
              "agent_id": "${{ inputs.agent-id }}",
              "ssl": "${{ inputs.ssl }}",
              "ssl_ca_cert": "${{ inputs.ssl_ca_cert }}",
              "ssl_key": "${{ inputs.ssl_key }}",
              "ssl_cert": "${{ inputs.ssl_cert }}"
          }'
